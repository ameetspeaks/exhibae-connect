name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_ed25519
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          if_key_exists: replace
          config: |
            Host exhibae
              HostName 69.62.77.142
              User deployer
              IdentityFile ~/.ssh/id_ed25519
              StrictHostKeyChecking no
              
      - name: Test SSH Connection
        run: ssh exhibae "echo 'SSH connection test successful'"
          
      - name: Deploy to server
        env:
          DEPLOY_PATH: /var/www/exhibae
        run: |
          echo "Starting deployment process..."
          
          # Create deploy directory
          mkdir -p deploy
          
          # Debug directory contents
          echo "Checking build files..."
          ls -la dist/
          
          # Copy build files
          cp -r dist/* deploy/
          cp .htaccess deploy/ || echo "No .htaccess file found"
          cp .env.production deploy/.env || echo "No .env.production file found"
          
          echo "Checking deployment files..."
          ls -la deploy/
          
          # Create backup of current deployment
          echo "Creating backup..."
          ssh exhibae "if [ -d $DEPLOY_PATH ]; then cp -r $DEPLOY_PATH ${DEPLOY_PATH}_backup_$(date +%Y%m%d_%H%M%S); fi"
          
          # Deploy using rsync with progress
          echo "Deploying files..."
          rsync -avz --progress --delete deploy/ exhibae:$DEPLOY_PATH
          
          # Set proper permissions
          echo "Setting permissions..."
          ssh exhibae "sudo chown -R www-data:www-data $DEPLOY_PATH && sudo chmod -R 755 $DEPLOY_PATH"
          
          # Verify deployment
          echo "Verifying deployment..."
          ssh exhibae "ls -la $DEPLOY_PATH"
          
          # Cleanup local
          rm -rf deploy 